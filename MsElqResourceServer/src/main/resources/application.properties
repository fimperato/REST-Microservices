server.port = 8085

#mongodb
#spring.data.mongodb.host=localhost
#spring.data.mongodb.port=27017
#spring.data.mongodb.database=msAppElqServerDB
##spring.datasource.driver-class-name=mongodb.jdbc.MongoDriver

#mongodb mlab ; mongo ds137089.mlab.com:37089/msappelqserverdb -u <dbuser> -p <dbpassword>
spring.data.mongodb.host=ds137089.mlab.com
spring.data.mongodb.port=37089
spring.data.mongodb.database=msappelqserverdb
spring.data.mongodb.username=admin
spring.data.mongodb.password=admin

#postgresql (external db)
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.username=postgres
spring.datasource.password=postgresql1
spring.datasource.platform=POSTGRESQL

#spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.hibernate.show-sql: true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.generate-ddl=true
spring.jpa.show-sql=true

# to avoid org.postgresql.jdbc.PgConnection.createClob() is not yet implemented, with postgres driver version 42.2.2:
# disable driver's feature detection
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false
# without detection you have to set the dialect by hand
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

########### param related to local and docker ip ##############
## in caso di uso di docker imposto il <postgres machine ip>, tramite maven configuration:
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
#spring.datasource.url=jdbc:postgresql://@LOCAL_IP@:5432/postgres
local.ip = localhost
#local.ip = @LOCAL_IP@
docker.ip = 192.168.99.100
#docker.ip = @DOCKER_IP@